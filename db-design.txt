insert Users

db.users.insertMany([
    {
        user_id: 1,
        name: "UserOne",
        email: "UserOne@gmail.com",
    },
    {
        user_id: 2,
        name: "UserTwo",
        email: "UserTwo@gmail.com",
    },
    {
        user_id: 3,
        name: "UserThree",
        email: "UserThree@gmail.com",
    },
    {
        user_id: 4,
        name: "UserFour",
        email: "UserFour@gmail.com",
    },
]);



--------------------  insert codekata details ------------------------

db.codekata.insertMany([
    {
        user_id: 1,
        codekata_title: "Basics",
        codekata_problems: 30,
    },
    {
        user_id: 2,
        codekata_title: "Strings",
        codekata_problems: 10,
    },
    {
        user_id: 3,
        codekata_title: "Array",
        codekata_problems: 15,
    },
    {
        user_id: 4,
        codekata_title: "Input/Output",
        codekata_problems: 15,
    },
]);


---------------- insert attendance details -------------------

db.attendance.insertMany([
    {
        user_id: 1,
        topic_id: 1,
        present: false,
    },

    {
        user_id: 2,
        topic_id: 2,
        present: true,
    },
    {
        user_id: 3,
        topic_id: 3,
        present: false,
    },
    {
        user_id: 4,
        topic_id: 4,
        present: true,
    },
]);

------------------  insert topic details -------------------------------

db.topics.insertMany([
    {
        topic_id: 1,
        topic: "React",
        topic_created: new Date("2020-10-05"),
    },
    {
        topic_id: 2,
        topic: "MongoDB",
        topic_created: new Date("2020-10-25"),
    },
    {
        topic_id: 3,
        topic: "Nodejs",
        topic_created: new Date("2020-11-05"),
    },
    {
        topic_id: 4,
        topic: "Express",
        topic_created: new Date("2020-11-07"),
    },
]);

-----------------  insert task details -----------------------------

db.tasks.insertMany([
    {
        topic_id: 1,
        topic: "HTML",
        topic_date: new Date("2020-10-01"),
        submitted: false,
    },
    {
        topic_id: 2,
        topic: "CSS",
        topic_date: new Date("2020-10-10"),
        submitted: true,
    },
    {
        topic_id: 3,
        topic: "JS",
        topic_date: new Date("2020-10-16"),
        submitted: false,
    },
    {
        topic_id: 4,
        topic: "AWS",
        topic_date: new Date("2020-10-16"),
        submitted: true,
    },
]);


-------------------- insert mentor details ------------------------

db.mentors.insertMany([
    {
        m_id: 1,
        m_name: "MentorOne",
        m_email: "MentorOne@gmail.com",
        class_count: 20,
    },
    {
        m_id: 2,
        m_name: "MentorTwo",
        m_email: "akbar@gmail.com",
        class_count: 10,
    },
    {
        m_id: 3,
        m_name: "MentorThree",
        m_email: "ragav@gmail.com",
        class_count: 50,
    },
    {
        m_id: 4,
        m_name: "MentorFour",
        m_email: "MentorFour@gmail.com",
        class_count: 50,
    },
]);


---------------- Query code start from Here ------------------------------

1.Find all the topics and tasks which are thought in the month of October

db.tasks.find({ topic_date: { $lte: new Date("2020-10-31"), $gte: new Date("2020-10-01") } });

db.topics.find({ topic_created: { $lte: new Date("2020-10-31"), $gte: new Date("2020-10-01") } });

2.Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.companydrives.find({ drive_date: { $lte: new Date("2020-10-31"), $gte: new Date("2020-10-15") } });


3.Find all the company drives and students who are appeared for the placement.

db.companydrives.aggregate({ $lookup: {
       from: "users",
        localField: "user_id",
        foreignField: "user_id",
        as: "company_drives",
        pipeline: [{ $project: { name: 1 } }],
    },
});

4.Find the number of problems solved by the user in codekata

db.users.aggregate({
    $lookup: {
        from: "codekata",
        localField: "user_id",
        foreignField: "user_id",
        as: "Solved",
        pipeline: [{ $project: { codekata_problems: 1 } }],
    },
});

5.Find all the mentors with who has the mentee's count more than 15
db.mentors.find({ class_count: { $gt: 15 } });

6.Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020
db.tasks.aggregate([
        {
            $lookup: {
                from: "attendance",
                localField: "topic_id",
                foreignField: "user_id",
                as: "attendance",
            },
        },
        {
            $match: { $and: [{ submitted: false }, { "attendance.present": false }] },
        },
    ]);